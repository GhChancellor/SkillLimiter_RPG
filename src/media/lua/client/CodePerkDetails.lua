---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 30/10/23 17:52
---

---@class CodePerkDetails

require("lib/CharacterBaseObj")
require("lib/PerkDetailsObj")

local perkFactoryPZ = require("lib/PerkFactoryPZ")
local dataValidator = require("lib/DataValidator")
local errHandler = require("lib/ErrHandler")

local CodePerkDetails = {}

--- **Encode Perk Details convert the CharacterObj into a table. The ModData only accepts a table**
---@param characterObj CharacterBaseObj
---@return table
function CodePerkDetails.encodePerkDetails(characterObj)
    if not characterObj then
        errHandler.errMsg("CharacterLib.encodePerkDetails(characterObj)",
                "characterObj " .. errHandler.err.IS_NULL)
    end

    ---@type table
    local lines = {}

    -- @param perk PerkFactory.Perk
    -- @param level int
    -- @param xp float
    for _, v in pairs(characterObj:getPerkDetails()) do
        local value = ( v.perk:getName() .. "-" ..
                tostring(v:getCurrentLevel())  .. "-" ..
                tostring(v:getMaxLevel())  .. "-" ..
                tostring(v:getXp()))

        table.insert(lines, value)
    end

    return lines
end

--- **Decode Perk Details convert a table into CharacterObj**
---@param characterPerkDetails table
---@return CharacterBaseObj getPerkDetails()
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CodePerkDetails.decodePerkDetails(characterPerkDetails)
    if not dataValidator.isTable(characterPerkDetails) then
        errHandler.errMsg("CharacterLib.decodePerkDetails(characterPerkDetails)",
                "characterPerkDetails " .. errHandler.err.IS_NOT_TABLE)
        return nil
    end

    ---@type CharacterBaseObj
    local CharacterObj01 = CharacterBaseObj:new()

    ---@type table
    local lines = {}

    -- @param perk PerkFactory.Perk
    -- @param currentlevel int
    -- @param maxLevel
    -- @param xp float
    for _, v in pairs(characterPerkDetails) do
        for s in v:gmatch("[^\r-]+") do
            table.insert(lines, s)
        end

        -- @type PerkDetailsObj
        local PerkDetailsObj01 = PerkDetailsObj:new()

        --- **Set Perk**
        PerkDetailsObj01:setPerk(perkFactoryPZ.getPerkByName_PZ(lines[1]))
        --- **Set Current Level**
        PerkDetailsObj01:setCurrentLevel(tonumber(lines[2]))
        --- **Set Max Level**
        PerkDetailsObj01:setMaxLevel(tonumber(lines[3]))
        --- **Set Xp**
        PerkDetailsObj01:setXp(tonumber(lines[4]) + 0.0)
        --- **Save Perk Details**
        CharacterObj01:savePerkDetails(PerkDetailsObj01)

        lines = {}
    end

    return CharacterObj01
end

return CodePerkDetails