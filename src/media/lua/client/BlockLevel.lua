---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 23/03/23 10:33
---

---@class BlockLevel

local characterPz = require("lib/CharacterPZ")
local perkFactoryPZ = require("lib/PerkFactoryPZ")

---Block Level
---@param character IsoGameCharacter
---@param currentPerkLevel int
---@param perk PerkFactory
---@param maxLevel int
local function blockLevel(character, currentPerkLevel , perk, maxLevel)
    local convertLevelToXp_ = 0.0

    if currentPerkLevel >= maxLevel then
        for level_ = 1, maxLevel do
            convertLevelToXp_ = convertLevelToXp_ +
                    perkFactoryPZ.convertLevelToXp(perk, level_)
        end
    end

    local totalXp = ( convertLevelToXp_ -
            characterPz.getXp(character, perk))

    if totalXp == 0 then
        return
    end

    characterPz.addXP_PZ(character, perk, totalXp, false, false, true)
end

---Calculate Block Level
---@param character IsoGameCharacter
---@param perk PerkFactory.Perk
---@param CreateCharacterMaxSkillObj CharacterObj
local function calculateBlockLevel(character, CreateCharacterMaxSkillObj, perk)
    local currentPerkLevel = characterPz.getPerkLevel_PZ(character, perk)

    for _, v in pairs(CreateCharacterMaxSkillObj:getPerkDetails()) do
        if v:getPerk() == perk then
            local dbg1 = v:getPerk()
            local dbg2 = perk
            local dbg
            if currentPerkLevel >= v:getLevel() then
                blockLevel(character, currentPerkLevel, v:getPerk() , v:getLevel())
            end
        end
    end
end

---Check Level Max
---@param character IsoGameCharacter
---@param perk PerkFactory.Perk
---@param nil
function checkLevelMax(character, perk, CreateCharacterMaxSkillObj)
    if not character or not perk then
        return nil
    end

    calculateBlockLevel(character, CreateCharacterMaxSkillObj, perk)
end

